[gd_resource type="ShaderMaterial" load_steps=9 format=2]

[ext_resource path="res://Scenes/Carte/Mesh/CarteDixit_mirror.jpg" type="Texture" id=1]
[ext_resource path="res://Scenes/Carte/Mesh/CarteDixit_col.jpg" type="Texture" id=2]

[sub_resource type="VisualShaderNodeTexture" id=1]
texture = ExtResource( 2 )
texture_type = 1

[sub_resource type="VisualShaderNodeTexture" id=2]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorDecompose" id=3]

[sub_resource type="VisualShaderNodeScalarOp" id=4]
default_input_values = [ 0, 0.0, 1, 1.5 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarOp" id=5]
default_input_values = [ 0, 0.0, 1, 0.2 ]

[sub_resource type="VisualShader" id=6]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform sampler2D tex_frg_2 : hint_albedo;
uniform sampler2D tex_frg_3;



void vertex() {
// Output:0

}

void fragment() {
// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, UV.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, UV.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// VectorDecompose:4
	float n_out4p0 = n_out3p0.x;
	float n_out4p1 = n_out3p0.y;
	float n_out4p2 = n_out3p0.z;

// ScalarOp:5
	float n_in5p1 = 1.50000;
	float n_out5p0 = n_out4p0 * n_in5p1;

// ScalarOp:6
	float n_in6p1 = 0.20000;
	float n_out6p0 = n_out4p0 + n_in6p1;

// Output:0
	ALBEDO = n_out2p0;
	METALLIC = n_out5p0;
	ROUGHNESS = n_out6p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -529, 188 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -100, 0 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -420, 260 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( -200, 260 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 120, 220 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( 120, 360 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 3, 0, 4, 0, 5, 0, 0, 2, 4, 0, 5, 0, 4, 0, 6, 0, 6, 0, 0, 3 )

[resource]
shader = SubResource( 6 )
